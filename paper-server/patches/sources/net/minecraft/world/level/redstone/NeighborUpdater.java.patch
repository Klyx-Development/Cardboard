--- a/net/minecraft/world/level/redstone/NeighborUpdater.java
+++ b/net/minecraft/world/level/redstone/NeighborUpdater.java
@@ -37,13 +_,45 @@
         BlockState blockState = level.getBlockState(pos);
         if ((flags & 128) == 0 || !blockState.is(Blocks.REDSTONE_WIRE)) {
             BlockState blockState1 = blockState.updateShape(level, level, pos, direction, neighborPos, neighborState, level.getRandom());
+
+            if (!blockState.isAir() && blockState1.isAir() && level instanceof net.minecraft.server.level.ServerLevel serverLevel) {
+                if (serverLevel.lastBlockBreaker != null) {
+                    org.bukkit.block.Block brokenBlock = org.bukkit.craftbukkit.block.CraftBlock.at(serverLevel, pos);
+                    org.bukkit.block.Block sourceBlock = org.bukkit.craftbukkit.block.CraftBlock.at(serverLevel, neighborPos);
+
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callBlockBrokenByNeighbourEvent(
+                        ((net.minecraft.server.level.ServerPlayer) serverLevel.lastBlockBreaker).getBukkitEntity(),
+                        sourceBlock,
+                        brokenBlock
+                    );
+                }
+            }
+
             Block.updateOrDestroy(blockState, blockState1, level, pos, flags, recursionLeft);
         }
     }
 
     static void executeUpdate(Level level, BlockState state, BlockPos pos, Block neighborBlock, @Nullable Orientation orientation, boolean movedByPiston) {
+        // Paper start - Add source block to BlockPhysicsEvent
+        executeUpdate(level, state, pos, neighborBlock, orientation, movedByPiston, pos);
+    }
+
+    static void executeUpdate(Level level, BlockState state, BlockPos pos, Block neighborBlock, @Nullable Orientation orientation, boolean movedByPiston, BlockPos sourcePos) {
+        // Paper end - Add source block to BlockPhysicsEvent
         try {
+            // CraftBukkit start
+            org.bukkit.event.block.BlockPhysicsEvent event = new org.bukkit.event.block.BlockPhysicsEvent(org.bukkit.craftbukkit.block.CraftBlock.at(level, pos), org.bukkit.craftbukkit.block.data.CraftBlockData.fromData(state), org.bukkit.craftbukkit.block.CraftBlock.at(level, sourcePos)); // Paper - Add source block to BlockPhysicsEvent
+            level.getCraftServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
             state.handleNeighborChanged(level, pos, neighborBlock, orientation, movedByPiston);
+            // Spigot start
+        } catch (StackOverflowError ex) {
+            level.lastPhysicsProblem = pos.immutable();
+            // Spigot end
         } catch (Throwable var9) {
             CrashReport crashReport = CrashReport.forThrowable(var9, "Exception while updating neighbours");
             CrashReportCategory crashReportCategory = crashReport.addCategory("Block being updated");
